name: Release & Publish
on:
  push:
    tags:
      - v*

jobs: 
  release: 
    name: "Release binary"
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with: 
          go-version-file: 'go.mod'
      - uses: goreleaser/goreleaser-action@v6
        env: 
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with: 
          args: "release --clean"
          version: latest

  publish: 
    name: "Publish to GHCR"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          push: false
          build-args: "VERSION=${{ github.ref_name }}"
          tags: "${{ github.repository }}:latest,${{ github.repository }}:${{ github.ref_name }}"
      
      # - name: "Slim Images (latest)"
      #   uses: kitabisa/docker-slim-action@v1
      #   with:
      #     target: "${{ github.repository }}:latest"
      #     overwrite: true
      #   env:
      #     DSLIM_HTTP_PROBE: false
      
      # - name: "Slim Images (versioing)"
      #   uses: kitabisa/docker-slim-action@v1
      #   with:
      #     target: "${{ github.repository }}:${{ github.ref_name }}"
      #     overwrite: true
      #   env:
      #     DSLIM_HTTP_PROBE: false

      - name: "Re-tagging & Push Images"
        run: |
          docker tag ${{ github.repository }}:latest ghcr.io/${{ github.repository }}:latest
          docker tag ${{ github.repository }}:${{ github.ref_name }} ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          docker push ghcr.io/${{ github.repository }} -a